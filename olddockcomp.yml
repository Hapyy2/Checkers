services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NEXT_PUBLIC_KEYCLOAK_URL=http://${DOMAIN_NAME:-localhost}/auth
      - NEXT_PUBLIC_KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - NEXT_PUBLIC_KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID}
      - NODE_ENV=${NODE_ENV:-development}
    depends_on:
      - keycloak
    networks:
      - whattodo-network

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:26.2.4
    command:
      - start-dev
      - --import-realm
    environment:
      - KC_HTTP_PORT=${KEYCLOAK_PORT}
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN_USER}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
    ports:
      - "${KEYCLOAK_PORT}:8080"
    volumes:
      - keycloak-data:/opt/keycloak/data
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm.json
    networks:
      - whattodo-network

  postgres:
    container_name: postgres
    image: postgres:17-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db/postgres:/docker-entrypoint-initdb.d
    networks:
      - whattodo-network
    secrets:
      - postgres_password

  mongodb:
    container_name: mongodb
    image: mongo:7.0
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DB}
    volumes:
      - mongodb-data:/data/db
      - ./db/mongodb:/docker-entrypoint-initdb.d
    command: mongod --bind_ip_all --auth
    networks:
      - whattodo-network
    secrets:
      - mongo_password

  tasks-api:
    container_name: tasks-api
    build:
      context: ./api/tasks
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}?schema=public
      - PORT=${TASKS_API_PORT}
      - NODE_ENV=${NODE_ENV}
      - KEYCLOAK_URL=http://${DOMAIN_NAME:-localhost}/auth
      - KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID}
      - KEYCLOAK_CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET}
      - SESSION_SECRET=${SESSION_SECRET}
      - SERVICE_NAME=tasks-service
      - ERROR_SERVICE_URL=${ERROR_SERVICE_URL}
      - RETRY_DELAY=5000
      - MAX_RETRIES=5
    volumes:
      - ./api/tasks:/app
      - /app/node_modules
      - /app/prisma
    depends_on:
      - postgres
      - keycloak
    networks:
      - whattodo-network

  error-service:
    container_name: error-service
    build:
      context: ./api/errors
      dockerfile: Dockerfile
    environment:
      - PORT=${ERROR_SERVICE_PORT}
      - NODE_ENV=${NODE_ENV}
      - MONGO_HOST=mongodb
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_DB=${MONGO_DB}
      - KEYCLOAK_URL=http://${DOMAIN_NAME:-localhost}/auth
      - KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID}
      - KEYCLOAK_CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET}
      - SESSION_SECRET=${SESSION_SECRET}
      - RETRY_DELAY=5000
      - MAX_RETRIES=5
    volumes:
      - ./api/errors:/app
      - /app/node_modules
    depends_on:
      - mongodb
      - keycloak
    networks:
      - whattodo-network

networks:
  whattodo-network:
    driver: bridge

volumes:
  keycloak-data:
  mongodb-data:
  postgres-data:

secrets:
  mongo_password:
    file: ./secrets/mongo_password
  postgres_password:
    file: ./secrets/postgres_password
