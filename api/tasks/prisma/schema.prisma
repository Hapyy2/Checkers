generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  tasks     Task[]
  categories Category[]

  @@map("users")
}

model Category {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tasks     Task[]

  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([name, userId])
  @@map("categories")
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
  CANCELLED
}

model Task {
  id          String       @id @default(cuid())
  title       String
  description String?
  priority    TaskPriority @default(MEDIUM)
  status      TaskStatus   @default(TODO)
  dueDate     DateTime?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  categoryId  String?
  category    Category?    @relation(fields: [categoryId], references: [id], onDelete: SetNull)

  userId      String
  user        User         @relation(fields: [userId], references: [id], onDelete: Cascade)


  // Identyfikator projektu (na razie jako String)
  // projectId   String? // Jeśli zadania mogą należeć do projektów

  // Indeksy
  @@index([status])
  @@index([priority])
  @@index([dueDate])
  @@index([userId])
  @@index([categoryId])
  // @@index([projectId])

  @@map("tasks")
}